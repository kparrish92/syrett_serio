mutate(predicted_upper_p = round(upper_p, digits = 2) %>%
mutate(predicted_lower_p = round(lower_p, digits = 2))
data_for_priors %>%
data_for_priors %>%
mutate(log_odds = qlogis(predicted_grp)) %>%
mutate(upper = log_odds + .5) %>%
mutate(lower = log_odds - .5) %>%
mutate(upper_p = plogis(upper)) %>%
mutate(lower_p = plogis(lower)) %>%
mutate(predicted_grp_prob = round(predicted_grp, digits = 2)) %>%
mutate(predicted_upper_p = round(upper_p, digits = 2) %>%
mutate(predicted_lower_p = round(lower_p, digits = 2)
data_for_priors %>%
data_for_priors %>%
mutate(log_odds = qlogis(predicted_grp))
data_for_priors %>%
mutate(log_odds = qlogis(predicted_grp)) %>%
mutate(upper = log_odds + .5) %>%
mutate(lower = log_odds - .5) %>%
mutate(upper_p = plogis(upper)) %>%
mutate(lower_p = plogis(lower))
data_for_priors %>%
mutate(log_odds = qlogis(predicted_grp)) %>%
mutate(upper = log_odds + .5) %>%
mutate(lower = log_odds - .5) %>%
mutate(upper_p = plogis(upper)) %>%
mutate(lower_p = plogis(lower)) %>%
mutate(predicted_grp_prob = round(predicted_grp, digits = 2))
data_for_priors %>%
mutate(log_odds = qlogis(predicted_grp)) %>%
mutate(upper = log_odds + .5) %>%
mutate(lower = log_odds - .5) %>%
mutate(upper_p = plogis(upper)) %>%
mutate(lower_p = plogis(lower)) %>%
mutate(predicted_grp_prob = round(predicted_grp, digits = 2)) %>%
mutate(predicted_upper_p = round(upper_p, digits = 2)) %>%
mutate(predicted_lower_p = round(lower_p, digits = 2))
data_for_priors %>%
mutate(log_odds = qlogis(predicted_grp)) %>%
mutate(upper = log_odds + .5) %>%
mutate(lower = log_odds - .5) %>%
mutate(upper_p = plogis(upper)) %>%
mutate(lower_p = plogis(lower)) %>%
mutate(predicted_grp_prob = round(predicted_grp, digits = 2)) %>%
mutate(predicted_upper_p = round(upper_p, digits = 2)) %>%
mutate(predicted_lower_p = round(lower_p, digits = 2)) %>%
mutate(Prior_range = paste0(predicted_grp_prob, " [", predicted_lower_p, " - ", predicted_upper_p, "]" ))
data_for_priors %>%
mutate(log_odds = qlogis(predicted_grp)) %>%
mutate(upper = log_odds + .5) %>%
mutate(lower = log_odds - .5) %>%
mutate(upper_p = plogis(upper)) %>%
mutate(lower_p = plogis(lower)) %>%
mutate(predicted_grp_prob = round(predicted_grp, digits = 2)) %>%
mutate(predicted_upper_p = round(upper_p, digits = 2)) %>%
mutate(predicted_lower_p = round(lower_p, digits = 2)) %>%
mutate(Prior_range = paste0(predicted_grp_prob, " [", predicted_lower_p, " - ", predicted_upper_p, "]" )) %>%
select(Prior_range)
data_for_priors %>%
mutate(log_odds = qlogis(predicted_grp)) %>%
mutate(upper = log_odds + .5) %>%
mutate(lower = log_odds - .5) %>%
mutate(upper_p = plogis(upper)) %>%
mutate(lower_p = plogis(lower)) %>%
mutate(predicted_grp_prob = round(predicted_grp, digits = 2)) %>%
mutate(predicted_upper_p = round(upper_p, digits = 2)) %>%
mutate(predicted_lower_p = round(lower_p, digits = 2)) %>%
mutate(Prior_range = paste0(predicted_grp_prob, " [", predicted_lower_p, " - ", predicted_upper_p, "]" )) %>%
select(Prior_range, CategoryType, predicted_answer) %>%
pivot_wider(names_from = predicted_answer, values_from = Prior_range)
data_for_priors %>%
mutate(log_odds = qlogis(predicted_grp)) %>%
mutate(upper = log_odds + .5) %>%
mutate(lower = log_odds - .5) %>%
mutate(upper_p = plogis(upper)) %>%
mutate(lower_p = plogis(lower)) %>%
mutate(predicted_grp_prob = round(predicted_grp, digits = 2)) %>%
mutate(predicted_upper_p = round(upper_p, digits = 2)) %>%
mutate(predicted_lower_p = round(lower_p, digits = 2)) %>%
mutate(Prior_range = paste0(predicted_grp_prob, " [", predicted_lower_p, "-", predicted_upper_p, "]" )) %>%
select(Prior_range, CategoryType, predicted_answer) %>%
pivot_wider(names_from = predicted_answer, values_from = Prior_range)
data_for_priors %>%
filter(CategoryType == "Abstract" | CategoryType == "Artifact" | CategoryType == "Natural") %>%
mutate(log_odds = qlogis(predicted_grp)) %>%
mutate(upper = log_odds + .5) %>%
mutate(lower = log_odds - .5) %>%
mutate(upper_p = plogis(upper)) %>%
mutate(lower_p = plogis(lower)) %>%
mutate(predicted_grp_prob = round(predicted_grp, digits = 2)) %>%
mutate(predicted_upper_p = round(upper_p, digits = 2)) %>%
mutate(predicted_lower_p = round(lower_p, digits = 2)) %>%
mutate(Prior_range = paste0(predicted_grp_prob, " [", predicted_lower_p, "-", predicted_upper_p, "]" )) %>%
select(Prior_range, CategoryType, predicted_answer) %>%
pivot_wider(names_from = predicted_answer, values_from = Prior_range)
data_for_priors %>%
filter(CategoryType == "Abstract" | CategoryType == "Artifact" | CategoryType == "Natural") %>%
mutate(log_odds = qlogis(predicted_grp)) %>%
mutate(upper = log_odds + .5) %>%
mutate(lower = log_odds - .5) %>%
mutate(upper_p = plogis(upper)) %>%
mutate(lower_p = plogis(lower)) %>%
mutate(predicted_grp_prob = round(predicted_grp, digits = 2)) %>%
mutate(predicted_upper_p = round(upper_p, digits = 2)) %>%
mutate(predicted_lower_p = round(lower_p, digits = 2)) %>%
mutate(Prior_range = paste0(predicted_grp_prob, " [", predicted_lower_p, "-", predicted_upper_p, "]" )) %>%
select(Prior_range, CategoryType, predicted_answer) %>%
pivot_wider(names_from = predicted_answer, values_from = Prior_range) %>%
knitr::kable(format = "pandoc")
data_for_priors
data_for_priors = left_join(nonmember_tidy_mutated_grouped, member_tidy_mutated_grouped) %>%
mutate(predicted_grp = (n_a + n_b)/sum(m_total, nm_total))
data_for_priors %>%
write.csv(here("data", "tidy", "prior_data.csv"))
conditional_effects(exp2_mod, categorical = TRUE)[["CategoryType:cats__"]] %>%
select(effect1__, effect2__, estimate__, lower__, upper__) %>%
mutate(estimate__ = round(estimate__, digits = 2)) %>%
mutate(lower__ = round(lower__, digits = 2)) %>%
mutate(upper__ = round(upper__, digits = 2)) %>%
mutate(model_effect = paste0(estimate__, " [", lower__, " - ", upper__, "]")) %>%
rename("CategoryType" = "effect1__") %>%
select(CategoryType, effect2__, model_effect) %>%
pivot_wider(names_from = effect2__, values_from = model_effect)
senses_tidy$Selection
unique(senses_tidy$Selection)
unique(senses_tidy$Selection)
unique(senses_tidy$CategoryType)
unique(senses_tidy$Participant)
senses_tidy %>%
senses_tidy %>%
group_by(participant) %>%
summarise(n = n())
senses_tidy %>%
group_by(participant) %>%
summarise(n = n())
senses_tidy %>%
group_by(participant) %>%
summarise(n = n())
senses_tidy %>%
group_by(Participant) %>%
summarise(n = n())
plogis(.5)
nonmember_tidy = read.csv(here("data", "tidy", "nonmember_tidy.csv")) %>%
mutate(membership = "nonmember")
member_tidy = read.csv(here("data", "tidy", "member_tidy.csv")) %>%
mutate(membership = "member")
library(here)
library(tidyverse)
library(brms)
library(bayestestR)
nonmember_tidy = read.csv(here("data", "tidy", "nonmember_tidy.csv")) %>%
mutate(membership = "nonmember")
member_tidy = read.csv(here("data", "tidy", "member_tidy.csv")) %>%
mutate(membership = "member")
ord_data = rbind(member_tidy, nonmember_tidy)
View(ord_data)
ord_data = rbind(member_tidy, nonmember_tidy)
ord_mod <- brm(as.integer(Rating) ~ CategoryType*membership + (CategoryType*membership | Participant) +
data = ord_data,
ord_data = rbind(member_tidy, nonmember_tidy)
ord_mod <- brm(as.integer(Rating) ~ CategoryType*membership + (CategoryType*membership | Participant) +
data = ord_data,
nonmember_tidy = read.csv(here("data", "tidy", "nonmember_tidy.csv")) %>%
mutate(membership = "nonmember")
member_tidy = read.csv(here("data", "tidy", "member_tidy.csv")) %>%
mutate(membership = "member")
ord_data = rbind(member_tidy, nonmember_tidy)
ord_mod <- brm(as.integer(Rating) ~ CategoryType*membership +
(CategoryType*membership | Participant),
data = ord_data,
family = cumulative(),
cores = 4)
conditional_effects(ord_mod, categorical = TRUE)
cond_df_ord = conditional_effects(ord_mod, categorical = TRUE)[["CategoryType:cats__"]]
View(cond_df_ord)
ord_data$CategoryType
ord_data = rbind(member_tidy, nonmember_tidy) %>%
filter(CategoryType == c("Abstract", "Artifact", "Natural"))
ord_data = rbind(member_tidy, nonmember_tidy) %>%
filter(CategoryType == "Abstract"| CategoryType == "Artifact" | CategoryType ==  "Natural"))
ord_data = rbind(member_tidy, nonmember_tidy) %>%
filter(CategoryType == "Abstract"| CategoryType == "Artifact" | CategoryType ==  "Natural")
ord_data = rbind(member_tidy, nonmember_tidy) %>%
filter(CategoryType == "Abstract"| CategoryType == "Artifact" | CategoryType ==  "Natural")
ord_mod <- brm(as.integer(Rating) ~ CategoryType*membership +
(CategoryType*membership | Participant),
data = ord_data,
family = cumulative(),
cores = 4)
conditional_effects(ord_mod, categorical = TRUE)
df = conditional_effects(ord_mod, categorical = TRUE)
View(df)
df[["CategoryType:cats__"]]
df[["membership:cats__"]]
ord_mod_member <- brm(as.integer(Rating) ~ CategoryType +
(CategoryType*membership | Participant),
data = ord_data,
family = cumulative(),
cores = 4)
ord_mod_member <- brm(as.integer(Rating) ~ CategoryType +
(CategoryType*membership | Participant),
data = ord_data %>% filter(membership == "member"),
family = cumulative(),
cores = 4)
ord_mod_member <- brm(as.integer(Rating) ~ CategoryType +
(CategoryType | Participant),
data = ord_data %>% filter(membership == "member"),
family = cumulative(),
cores = 4)
write.rds(here("data", "models","ord_nonmember.rds"))
write_rds(here("data", "models","ord_member.rds"))
ord_mod_member <- brm(as.integer(Rating) ~ CategoryType +
(CategoryType | Participant),
data = ord_data %>% filter(membership == "member"),
family = cumulative(),
cores = 4)
## save output
ord_mod_member %>% write_rds(here("data", "models","ord_member.rds"))
## Run nonmember model
ord_mod_nonmember <- brm(as.integer(Rating) ~ CategoryType +
(CategoryType | Participant),
data = ord_data %>% filter(membership == "nonmember"),
family = cumulative(),
cores = 4)
## save output
ord_mod_nonmember %>% write_rds(here("data", "models","ord_nonmember.rds"))
get_prior(ord_mod_member)
summary(ord_mod_member)
plogis(-1.92)
conditional_effects(ord_mod_member)
conditional_effects(ord_mod_member, categorical = TRUE)
plogis(-1.92 + -1.33)
summary(ord_mod_member)
conditional_effects(ord_mod_member, categorical = TRUE)
plogis(-4)
conditional_effects(ord_mod_member)
conditional_effects(ord_mod_member, categorical = TRUE)
conditional_effects(ord_mod_nonmember)
conditional_effects(ord_mod_nonmember, categorical = TRUE)
conditional_effects(ord_mod_nonmember)
conditional_effects(ord_mod_nonmember, categorical = TRUE)
knitr::opts_chunk$set(echo = FALSE, warning = FALSE)
library(here)
library(tidyverse)
library(bayestestR)
library(brms)
exp1_mod_nm = read_rds(here("data", "models", "ord_nonmember.rds"))
exp2_mod_m = read_rds(here("data", "models", "ord_member.rds"))
describe_posterior(exp1_mod_nm) %>%
as_tibble() %>%
select(-c("CI", "ROPE_CI", "ROPE_low", "ROPE_high"))
describe_posterior(exp1_mod_nm) %>%
as_tibble() %>%
select(-c("CI", "ROPE_CI", "ROPE_low", "ROPE_high"))
summary(ord_mod_member)
conditional_effects(ord_mod_member)
conditional_effects(ord_mod_member, categorical = TRUE)
plogis(-1.92)
plogis(-1.92) - plogis(-.89)
plogis(-1.92 - -.89)
plogis(-1.92 + -.89)
plogis(-.89 - -1.92)
plogis(-1.92)
plogis(-.89)
plogis(-.24)
plogis(.4)
plogis(1.24)
plogis(2.22)
plogis(-1.92)
plogis(-.89)
fixef(ord_mod_member)
fixef(ord_mod_member)[1]
fixef(ord_mod_member)[1]
fixef(ord_mod_member)[1]
fixef(ord_mod_member)[1]
fixef(ord_mod_member)[1]
plogis(fixef(ord_mod_member)[1])
plogis(fixef(ord_mod_member)[2])
plogis(fixef(ord_mod_member)[2]) - plogis(fixef(ord_mod_member)[1])
plogis(fixef(ord_mod_member)[3]) - plogis(fixef(ord_mod_member)[2])
plogis(fixef(ord_mod_member)[1])
plogis(fixef(ord_mod_member)[2]) - plogis(fixef(ord_mod_member)[1])
plogis(fixef(ord_mod_member)[3]) - plogis(fixef(ord_mod_member)[2])
plogis(fixef(ord_mod_member)[4]) - plogis(fixef(ord_mod_member)[3])
plogis(fixef(ord_mod_member)[5]) - plogis(fixef(ord_mod_member)[4])
plogis(fixef(ord_mod_member)[6]) - plogis(fixef(ord_mod_member)[5])
plogis(fixef(ord_mod_member)[6])
1- plogis(fixef(ord_mod_member)[6])
plogis(fixef(ord_mod_member)[1])
plogis(fixef(ord_mod_member)[2]) - plogis(fixef(ord_mod_member)[1])
plogis(fixef(ord_mod_member)[3]) - plogis(fixef(ord_mod_member)[2])
plogis(fixef(ord_mod_member)[4]) - plogis(fixef(ord_mod_member)[3])
plogis(fixef(ord_mod_member)[5]) - plogis(fixef(ord_mod_member)[4])
plogis(fixef(ord_mod_member)[6]) - plogis(fixef(ord_mod_member)[5])
1- plogis(fixef(ord_mod_member)[6])
conditional_effects(ord_mod_member)
chk=conditional_effects(ord_mod_member, categorical = TRUE)
View(chk)
chk[["CategoryType:cats__"]]
View(chk[["CategoryType:cats__"]])
fixef(ord_mod_member)
View(chk)
chk[["CategoryType:cats__"]]
View(chk[["CategoryType:cats__"]])
plogis(fixef(ord_mod_member)[1])
fixef(ord_mod_member)[1]
ixef(ord_mod_member)[7]
fixef(ord_mod_member)[7]
fixef(ord_mod_member)[1] + fixef(ord_mod_member)[7]
fixef(ord_mod_member)[1] - fixef(ord_mod_member)[7]
plogis(fixef(ord_mod_member)[1] - fixef(ord_mod_member)[7])
plogis(fixef(ord_mod_member)[1] - fixef(ord_mod_member)[8])
conditional_effects(ord_mod_member, categorical = TRUE)
conditional_effects(ord_mod_member)
plogis(fixef(ord_mod_member)[1] - fixef(ord_mod_member)[7])
plogis(fixef(ord_mod_member)[2])
fixef(ord_mod_member)[2]
a1 - fixef(ord_mod_member)[2]
a1 = plogis(fixef(ord_mod_member)[1] - fixef(ord_mod_member)[7])
a1 - fixef(ord_mod_member)[2]
a1 - plogis(fixef(ord_mod_member)[2])
a1 - plogis(fixef(ord_mod_member)[1] - fixef(ord_mod_member)[2]))
a1 - plogis(fixef(ord_mod_member)[1] - fixef(ord_mod_member)[2])
a1
a1 - a1 - plogis(fixef(ord_mod_member)[1] - fixef(ord_mod_member)[2]) # the difference between 1 and 2
a1 - plogis(fixef(ord_mod_member)[1] - fixef(ord_mod_member)[2]) # the difference between 1 and 2
plogis(fixef(ord_mod_member)[1] - fixef(ord_mod_member)[2])
plogis(fixef(ord_mod_member)[1] - fixef(ord_mod_member)[2])
a2 = plogis(fixef(ord_mod_member)[1] - fixef(ord_mod_member)[2])
a1 = plogis(fixef(ord_mod_member)[1] - fixef(ord_mod_member)[7]) # 1 for artifact
a2
plogis(fixef(ord_mod_member)[1]
plogis(fixef(ord_mod_member)[1]
plogis(fixef(ord_mod_member)[1]
plogis(fixef(ord_mod_member)[1] - fixef(ord_mod_member)[2])
plogis(fixef(ord_mod_member)[1] - fixef(ord_mod_member)[2])
plogis(fixef(ord_mod_member)[2] - fixef(ord_mod_member)[3])
a1 = plogis(fixef(ord_mod_member)[1] - fixef(ord_mod_member)[7]) # 1 for artifact
a2 = plogis(fixef(ord_mod_member)[1] - fixef(ord_mod_member)[7] - fixef(ord_mod_member)[2]) # 2 for artifact
a2 = plogis(fixef(ord_mod_member)[2] - fixef(ord_mod_member)[7] - fixef(ord_mod_member)[3])
plogis(fixef(ord_mod_member)[2] - fixef(ord_mod_member)[7] - fixef(ord_mod_member)[3])
plogis(fixef(ord_mod_member)[1] - fixef(ord_mod_member)[7] - fixef(ord_mod_member)[2]) # 2 for artifact
a2 =
plogis(fixef(ord_mod_member)[1] - fixef(ord_mod_member)[7] - fixef(ord_mod_member)[2])
plogis(fixef(ord_mod_member)[1] - fixef(ord_mod_member)[7] - fixef(ord_mod_member)[2])
plogis(fixef(ord_mod_member)[1])
fixef(ord_mod_member)[7]
plogis(-1.33)
plogis(fixef(ord_mod_member)[1] - fixef(ord_mod_member)[7])
exp1_mod_nm = read_rds(here("data", "models", "ord_nonmember.rds"))
plogis(fixef(ord_mod_member)[1])
plogis(fixef(ord_mod_member)[2]) - plogis(fixef(ord_mod_member)[1])
plogis(fixef(ord_mod_member)[3]) - plogis(fixef(ord_mod_member)[2])
plogis(fixef(ord_mod_member)[4]) - plogis(fixef(ord_mod_member)[3])
plogis(fixef(ord_mod_member)[5]) - plogis(fixef(ord_mod_member)[4])
plogis(fixef(ord_mod_member)[6]) - plogis(fixef(ord_mod_member)[5])
1- plogis(fixef(ord_mod_member)[6])
plogis(fixef(ord_mod_member)[1]) - fixef(ord_mod_member)[7])
plogis(fixef(ord_mod_member)[1]) - fixef(ord_mod_member)[7])
plogis(fixef(ord_mod_member)[1] - fixef(ord_mod_member)[7]) # 1 for artifact
plogis(fixef(ord_mod_member)[2] - fixef(ord_mod_member)[7]) # 1 for artifact
conditional_effects(ord_mod_member)
conditional_effects(ord_mod_member, categorical = TRUE)
plogis(fixef(ord_mod_member)[1] - fixef(ord_mod_member)[8])
plogis(fixef(ord_mod_member)[1])
plogis(fixef(ord_mod_member)[2])
plogis(fixef(ord_mod_member)[1])
plogis(fixef(ord_mod_member)[2] - fixef(ord_mod_member)[7]) # 1 for artifact
a1 = plogis(fixef(ord_mod_member)[1] - fixef(ord_mod_member)[7]) # 1 for artifact
plogis(fixef(ord_mod_member)[2] - fixef(ord_mod_member)[7]) - a1
plogis(fixef(ord_mod_member)[2] - fixef(ord_mod_member)[7])
plogis(fixef(ord_mod_member)[3] - fixef(ord_mod_member)[7])
plogis(fixef(ord_mod_member)[3] - fixef(ord_mod_member)[7]) - a2
plogis(fixef(ord_mod_member)[1] - fixef(ord_mod_member)[7]) # 1 for artifact
plogis(fixef(ord_mod_member)[2] - fixef(ord_mod_member)[7]) - a1 # 1 for artifact
plogis(fixef(ord_mod_member)[3] - fixef(ord_mod_member)[7]) - a2
plogis(fixef(ord_mod_member)[3] - fixef(ord_mod_member)[7])
plogis(fixef(ord_mod_member)[2] - fixef(ord_mod_member)[7])
plogis(fixef(ord_mod_member)[1] - fixef(ord_mod_member)[7]) #
plogis(fixef(ord_mod_member)[1])
plogis(fixef(ord_mod_member)[1] - fixef(ord_mod_member)[7])
plogis(fixef(ord_mod_member)[2] - fixef(ord_mod_member)[7])
plogis(fixef(ord_mod_member)[3] - fixef(ord_mod_member)[7])
plogis(fixef(ord_mod_member)[3] - fixef(ord_mod_member)[7])
plogis(fixef(ord_mod_member)[4] - fixef(ord_mod_member)[7])
plogis(fixef(ord_mod_member)[3] - fixef(ord_mod_member)[7])
plogis(fixef(ord_mod_member)[4] - fixef(ord_mod_member)[7])
plogis(fixef(ord_mod_member)[5] - fixef(ord_mod_member)[7])
plogis(fixef(ord_mod_member)[6] - fixef(ord_mod_member)[7])
a1 = plogis(fixef(ord_mod_member)[1] - fixef(ord_mod_member)[7]) # 1 for artifact
a2 = plogis(fixef(ord_mod_member)[2] - fixef(ord_mod_member)[7]) - a1 # 1 for artifact
a3 = plogis(fixef(ord_mod_member)[3] - fixef(ord_mod_member)[7])
a4 = plogis(fixef(ord_mod_member)[4] - fixef(ord_mod_member)[7])
a5 = plogis(fixef(ord_mod_member)[5] - fixef(ord_mod_member)[7])
a6 = plogis(fixef(ord_mod_member)[6] - fixef(ord_mod_member)[7])
1 - a6
a1 = plogis(fixef(ord_mod_member)[1] - fixef(ord_mod_member)[7]) # 1 for artifact
a2 = plogis(fixef(ord_mod_member)[2] - fixef(ord_mod_member)[7]) - a1 # 1 for artifact
a3 = plogis(fixef(ord_mod_member)[3] - fixef(ord_mod_member)[7]) - a2
a4 = plogis(fixef(ord_mod_member)[4] - fixef(ord_mod_member)[7]) - a3
a5 = plogis(fixef(ord_mod_member)[5] - fixef(ord_mod_member)[7]) - a4
a6 = plogis(fixef(ord_mod_member)[6] - fixef(ord_mod_member)[7]) - a5
1 - a6
a3
a2
plogis(fixef(ord_mod_member)[1] - fixef(ord_mod_member)[7]) # 1 for artifact
a1 = plogis(fixef(ord_mod_member)[1] - fixef(ord_mod_member)[7]) # 1 for artifact
a2 = plogis(fixef(ord_mod_member)[2] - fixef(ord_mod_member)[7]) - a1 # 1 for artifact
plogis(fixef(ord_mod_member)[3] - fixef(ord_mod_member)[7])
plogis(fixef(ord_mod_member)[3] - fixef(ord_mod_member)[7]) - plogis(fixef(ord_mod_member)[2] - fixef(ord_mod_member)[7])
plogis(fixef(ord_mod_member)[1] - fixef(ord_mod_member)[7]) # 1 for artifact
plogis(fixef(ord_mod_member)[2] - fixef(ord_mod_member)[7]) - plogis(fixef(ord_mod_member)[1] - fixef(ord_mod_member)[7])
plogis(fixef(ord_mod_member)[3] - fixef(ord_mod_member)[7]) - plogis(fixef(ord_mod_member)[2] - fixef(ord_mod_member)[7])
plogis(fixef(ord_mod_member)[4] - fixef(ord_mod_member)[7]) - plogis(fixef(ord_mod_member)[3] - fixef(ord_mod_member)[7])
plogis(fixef(ord_mod_member)[5] - fixef(ord_mod_member)[7]) - plogis(fixef(ord_mod_member)[5] - fixef(ord_mod_member)[7])
plogis(fixef(ord_mod_member)[6] - fixef(ord_mod_member)[7]) - plogis(fixef(ord_mod_member)[5] - fixef(ord_mod_member)[7]) -
1 - plogis(fixef(ord_mod_member)[6] - fixef(ord_mod_member)[7])
plogis(fixef(ord_mod_member)[1] - fixef(ord_mod_member)[7]) # 1 for artifact
plogis(fixef(ord_mod_member)[2] - fixef(ord_mod_member)[7]) - plogis(fixef(ord_mod_member)[1] - fixef(ord_mod_member)[7])
plogis(fixef(ord_mod_member)[3] - fixef(ord_mod_member)[7]) - plogis(fixef(ord_mod_member)[2] - fixef(ord_mod_member)[7])
plogis(fixef(ord_mod_member)[4] - fixef(ord_mod_member)[7]) - plogis(fixef(ord_mod_member)[3] - fixef(ord_mod_member)[7])
plogis(fixef(ord_mod_member)[5] - fixef(ord_mod_member)[7]) - plogis(fixef(ord_mod_member)[4] - fixef(ord_mod_member)[7])
plogis(fixef(ord_mod_member)[6] - fixef(ord_mod_member)[7]) - plogis(fixef(ord_mod_member)[5] - fixef(ord_mod_member)[7]) -
1 - plogis(fixef(ord_mod_member)[6] - fixef(ord_mod_member)[7])
plogis(fixef(ord_mod_member)[6] - fixef(ord_mod_member)[7])
1 - plogis(fixef(ord_mod_member)[6] - fixef(ord_mod_member)[7])
plogis(fixef(ord_mod_member)[6] - fixef(ord_mod_member)[7]) - plogis(fixef(ord_mod_member)[5] - fixef(ord_mod_member)[7]) -
plogis(fixef(ord_mod_member)[1] - fixef(ord_mod_member)[7]) # 1 for artifact
plogis(fixef(ord_mod_member)[2] - fixef(ord_mod_member)[7]) - plogis(fixef(ord_mod_member)[1] - fixef(ord_mod_member)[7])
plogis(fixef(ord_mod_member)[3] - fixef(ord_mod_member)[7]) - plogis(fixef(ord_mod_member)[2] - fixef(ord_mod_member)[7])
plogis(fixef(ord_mod_member)[4] - fixef(ord_mod_member)[7]) - plogis(fixef(ord_mod_member)[3] - fixef(ord_mod_member)[7])
plogis(fixef(ord_mod_member)[5] - fixef(ord_mod_member)[7]) - plogis(fixef(ord_mod_member)[4] - fixef(ord_mod_member)[7])
plogis(fixef(ord_mod_member)[6] - fixef(ord_mod_member)[7]) - plogis(fixef(ord_mod_member)[5] - fixef(ord_mod_member)[7])
1 - plogis(fixef(ord_mod_member)[6] - fixef(ord_mod_member)[7])
plogis(fixef(ord_mod_member)[1] - fixef(ord_mod_member)[7])
knitr::opts_chunk$set(echo = FALSE, warning = FALSE, message = FALSE)
library(here)
library(tidyverse)
library(bayestestR)
library(brms)
exp1_mod_nm = read_rds(here("data", "models", "ord_nonmember.rds"))
exp1_mod_m = read_rds(here("data", "models", "ord_member.rds"))
df = conditional_effects(exp1_mod_m, categorical = TRUE)
View(df)
df = conditional_effects(exp1_mod_m, categorical = TRUE)[["CategoryType:cats__"]]
conditional_effects(exp1_mod_m, categorical = TRUE)[["CategoryType:cats__"]] %>%
select(effect1__, effect2__, estimate__, lower__, upper__, effect))
conditional_effects(exp1_mod_m, categorical = TRUE)[["CategoryType:cats__"]] %>%
select(effect1__, effect2__, estimate__, lower__, upper__, effect)
conditional_effects(exp1_mod_m, categorical = TRUE)[["CategoryType:cats__"]] %>%
select(effect1__, effect2__, estimate__, lower__, upper__, effect)
conditional_effects(exp1_mod_m, categorical = TRUE)[["CategoryType:cats__"]] %>%
select(effect1__, effect2__, estimate__, lower__, upper__)
conditional_effects(exp1_mod_m, categorical = TRUE)[["CategoryType:cats__"]] %>%
select(effect1__, effect2__, estimate__, lower__, upper__) %>%
rename("CategoryType" = "effect1__") %>%
rename("Rating" = "effect2__")
conditional_effects(exp1_mod_m, categorical = TRUE)[["CategoryType:cats__"]] %>%
select(effect1__, effect2__, estimate__, lower__, upper__) %>%
rename("CategoryType" = "effect1__") %>%
rename("Rating" = "effect2__") %>%
mutate(estimate__ = round(estimate__, digits = 2)) %>%
mutate(lower__ = round(lower__, digits = 2)) %>%
mutate(upper__ = round(upper__, digits = 2)) %>%
mutate(model_effect = paste0(estimate__, " [", lower__, " - ", upper__, "]"))
conditional_effects(exp1_mod_m, categorical = TRUE)[["CategoryType:cats__"]] %>%
select(effect1__, effect2__, estimate__, lower__, upper__) %>%
rename("CategoryType" = "effect1__") %>%
rename("Rating" = "effect2__") %>%
mutate(estimate__ = round(estimate__, digits = 2)) %>%
mutate(lower__ = round(lower__, digits = 2)) %>%
mutate(upper__ = round(upper__, digits = 2)) %>%
mutate(model_effect = paste0(estimate__, " [", lower__, " - ", upper__, "]")) %>%
select(CategoryType, Rating, model_effect)
library(here)
library(tidyverse)
library(brms)
library(bayestestR)
exp3_tidy = read.csv(here("data", "tidy", "four_choice_data.csv"))
exp3_tidy
exp3_tidy
exp3_tidy
exp3_tidy = read.csv(here("data", "tidy", "four_choice_data.csv")) %>%
rename(kind = "CategoryType")
exp3_tidy = read.csv(here("data", "tidy", "four_choice_data.csv")) %>%
rename("kind" = "CategoryType")
exp3_tidy = read.csv(here("data", "tidy", "four_choice_data.csv")) %>%
rename("CategoryType" = "kind")
exp3_tidy
exp3_tidy = read.csv(here("data", "tidy", "four_choice_data.csv")) %>%
rename("CategoryType" = "kind") %>%
rename("Selection" = "response") %>%
rename("Participant" = "prolific_id")
b3 <- brm(Selection ~ CategoryType + (CategoryType | Participant),
data=exp3_tidy,
family="categorical")
View(exp3_tidy)
conditional_effects(b3,categorical = TRUE)
unique(exp3_tidy$CategoryType)
exp3_tidy = read.csv(here("data", "tidy", "four_choice_data.csv")) %>%
rename("CategoryType" = "kind") %>%
rename("Selection" = "response") %>%
rename("Participant" = "prolific_id") %>%
filter(CategoryType == "natural kind" |
CategoryType == "abstract concept" |
CategoryType == "artifact")
b3 <- brm(Selection ~ CategoryType + (CategoryType | Participant),
data=exp3_tidy,
family="categorical")
conditional_effects(b3,categorical = TRUE)
b3 %>%
write_rds(here("data", "models", "exp3_model.rds"))
